{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\game\\\\admin\\\\src\\\\jsx\\\\components\\\\charts\\\\Chartjs\\\\line1.js\";\nimport React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass LineChart1 extends Component {\n  render() {\n    const data = {\n      defaultFontFamily: \"Poppins\",\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\n      datasets: [{\n        label: \"My First dataset\",\n        data: [25, 20, 50, 41, 55, 45, 70],\n        borderColor: \"#EB8153\",\n        borderWidth: this.props.borderWidth ? this.props.borderWidth : \"2\",\n        // pointBackgroundColor: \"rgba(64, 24, 157, 1)\",\n        backgroundColor: \"rgba(235, 129, 83, 0)\"\n      }]\n    };\n    const options = {\n      legend: false,\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            max: 100,\n            min: 0,\n            stepSize: 20,\n            padding: 0\n          }\n        }],\n        xAxes: [{\n          ticks: {\n            padding: 0\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }]\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options,\n        height: this.props.height ? this.props.height : 150\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } // componentDidMount() {\n  //     const { datasets } = this.refs.chart.chartInstance.data\n  //     console.log(datasets[0].data);\n  // }\n\n\n}\n\nexport default LineChart1;","map":{"version":3,"sources":["C:/Users/User/Documents/game/admin/src/jsx/components/charts/Chartjs/line1.js"],"names":["React","Component","Line","LineChart1","render","data","defaultFontFamily","labels","datasets","label","borderColor","borderWidth","props","backgroundColor","options","legend","scales","yAxes","ticks","beginAtZero","max","min","stepSize","padding","xAxes","gridLines","display","drawBorder","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;;;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG;AACXC,MAAAA,iBAAiB,EAAE,SADR;AAEXC,MAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAFG;AAGXC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,kBADT;AAEEJ,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,CAFR;AAGEK,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WAAX,GAAyB,KAAKC,KAAL,CAAWD,WAApC,GAAkD,GAJjE;AAKE;AACAE,QAAAA,eAAe,EAAE;AANnB,OADQ;AAHC,KAAb;AAeA,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,WAAW,EAAE,IADR;AAELC,YAAAA,GAAG,EAAE,GAFA;AAGLC,YAAAA,GAAG,EAAE,CAHA;AAILC,YAAAA,QAAQ,EAAE,EAJL;AAKLC,YAAAA,OAAO,EAAE;AALJ;AADT,SADK,CADD;AAYNC,QAAAA,KAAK,EAAE,CACL;AACEN,UAAAA,KAAK,EAAE;AACLK,YAAAA,OAAO,EAAE;AADJ,WADT;AAIEE,UAAAA,SAAS,EAAE;AACTC,YAAAA,OAAO,EAAE,KADA;AAETC,YAAAA,UAAU,EAAE;AAFH;AAJb,SADK;AAZD;AAFM,KAAhB;AA2BA,wBACE;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,IAAI,EAAEtB,IADR;AAEE,QAAA,OAAO,EAAES,OAFX;AAGE,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWgB,MAAX,GAAoB,KAAKhB,KAAL,CAAWgB,MAA/B,GAAwC;AAHlD;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AASD,GArDgC,CAuDjC;AACA;AACA;AACA;;;AA1DiC;;AA6DnC,eAAezB,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nclass LineChart1 extends Component {\r\n  render() {\r\n    const data = {\r\n      defaultFontFamily: \"Poppins\",\r\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\r\n      datasets: [\r\n        {\r\n          label: \"My First dataset\",\r\n          data: [25, 20, 50, 41, 55, 45, 70],\r\n          borderColor: \"#EB8153\",\r\n          borderWidth: this.props.borderWidth ? this.props.borderWidth : \"2\",\r\n          // pointBackgroundColor: \"rgba(64, 24, 157, 1)\",\r\n          backgroundColor: \"rgba(235, 129, 83, 0)\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    const options = {\r\n      legend: false,\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n              max: 100,\r\n              min: 0,\r\n              stepSize: 20,\r\n              padding: 0,\r\n            },\r\n          },\r\n        ],\r\n        xAxes: [\r\n          {\r\n            ticks: {\r\n              padding: 0,\r\n            },\r\n            gridLines: {\r\n              display: false,\r\n              drawBorder: false,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n    return (\r\n      <>\r\n        <Line\r\n          data={data}\r\n          options={options}\r\n          height={this.props.height ? this.props.height : 150}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //     const { datasets } = this.refs.chart.chartInstance.data\r\n  //     console.log(datasets[0].data);\r\n  // }\r\n}\r\n\r\nexport default LineChart1;\r\n"]},"metadata":{},"sourceType":"module"}